# -*- coding: utf-8 -*-
"""csv_chatbot_dashboard.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1TQq6CuyvYLQ6U37s2jlmCfN2KP4zxsZ9
"""

!pip install streamlit pyngrok pandas plotly openai

# Commented out IPython magic to ensure Python compatibility.
# %%writefile app.py
# import streamlit as st
# import pandas as pd
# import plotly.express as px
# import os
# import openai
# 
# # --- PAGE CONFIG ---
# st.set_page_config(page_title="AI Data Dashboard", layout="wide")
# st.title("ü§ñ Smart CSV Data Chatbot Dashboard")
# 
# # --- FILE UPLOAD ---
# DATA_FILE = "data.csv"
# uploaded = st.file_uploader("üìÇ Upload your CSV file", type=["csv"])
# 
# def load_csv(uploaded_file):
#     """Try reading CSV with multiple encodings safely."""
#     for enc in ["utf-8", "latin1", "ISO-8859-1"]:
#         try:
#             df = pd.read_csv(uploaded_file, encoding=enc)
#             return df
#         except Exception:
#             continue
#     st.error("‚ö†Ô∏è Could not read the CSV file. Please save it as UTF-8 and try again.")
#     st.stop()
# 
# if uploaded is not None:
#     df = load_csv(uploaded)
#     df.to_csv(DATA_FILE, index=False)
#     st.success("‚úÖ CSV uploaded successfully.")
# elif os.path.exists(DATA_FILE):
#     df = load_csv(DATA_FILE)
#     st.info("üìÑ Loaded existing data.csv file.")
# else:
#     st.stop()
# 
# # --- DATA PREVIEW ---
# st.subheader("üìä Data Preview")
# st.dataframe(df.head(10), use_container_width=True)
# 
# # --- SUMMARY STATISTICS ---
# with st.expander("üìà Summary Statistics", expanded=True):
#     st.write(df.describe(include='all'))
# 
# # --- VISUALIZATION PANEL ---
# st.subheader("üìâ Quick Visual Insights")
# 
# num_cols = df.select_dtypes(include=['number']).columns.tolist()
# cat_cols = df.select_dtypes(exclude=['number']).columns.tolist()
# 
# if len(num_cols) >= 1 and len(cat_cols) >= 1:
#     x = st.selectbox("Select Categorical Column (x-axis):", cat_cols)
#     y = st.selectbox("Select Numerical Column (y-axis):", num_cols)
#     chart_type = st.radio("Chart Type:", ["Bar Chart", "Line Chart", "Pie Chart"], horizontal=True)
# 
#     if chart_type == "Bar Chart":
#         fig = px.bar(df, x=x, y=y, color=x, title=f"{y} by {x}")
#     elif chart_type == "Line Chart":
#         fig = px.line(df, x=x, y=y, title=f"{y} over {x}")
#     else:
#         pie_data = df.groupby(x)[y].sum().reset_index()
#         fig = px.pie(pie_data, names=x, values=y, title=f"{y} distribution by {x}")
# 
#     st.plotly_chart(fig, use_container_width=True)
# 
# # --- CHATBOT SECTION ---
# st.subheader("üí¨ Ask AI about your data")
# 
# # ‚ö†Ô∏è Add your OpenAI API key here
# openai.api_key = os.getenv("OPENAI_API_KEY", "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")
# 
# question = st.text_input("Type your question about this data:")
# 
# if question:
#     try:
#         csv_sample = df.head(100).to_csv(index=False)
#         prompt = f"""
#         You are a professional data analyst.
#         Analyze the following dataset sample:
#         {csv_sample}
# 
#         Now answer this question briefly and insightfully:
#         {question}
#         """
# 
#         response = openai.ChatCompletion.create(
#             model="gpt-3.5-turbo",
#             messages=[
#                 {"role": "system", "content": "You are a helpful data analysis assistant."},
#                 {"role": "user", "content": prompt}
#             ]
#         )
#         answer = response["choices"][0]["message"]["content"]
#         st.success(answer)
# 
#     except Exception as e:
#         st.error(f"‚ö†Ô∏è AI response failed: {e}")
#

from pyngrok import ngrok
ngrok.kill()  # Purane tunnels close karega

# Replace with your valid token:
ngrok.set_auth_token("34WsF18wGw7yaxi2jv3l2Etz8r2_3SNMNyMg9CxQLJKweZ6tk")

# Try connecting without options
public_url = ngrok.connect(8501)
print("‚úÖ New public URL:", public_url)

!streamlit run app.py --server.port 8501

